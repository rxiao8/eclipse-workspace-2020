/*Rose 
 * October 2020
 * Write a program that plays tic-tac-toe. The game is played on a 3x3 grid (think 2D array). The
game is played by two players, the ‘X’ player and the ‘O’ player. The player who goes first is the
‘O’ player. The player who has formed a horizontal, vertical or diagonal sequence of three
marks wins. Your program should declare a winner. You may handle the moves and display
however you wish.
You need to have at least two classes. A game class and the driver class.
The game class needs to handle the board. You are welcome to add a third
class of the player, but it is not necessary.*/
 
public class Game {
	//instance variables
	private String [][] board = new String [3] [3]; 
	private int row;
	private int column;
	private int maxTurns;
	private int playerOne;
	private int playerTwo;
	private boolean playerOneWins;
	
	
	//constructor
	public Game() {
		for (int i = 0; i < 3; i++) {
			for (int j = 0; j < 3; j ++) {
				board[i][j] = "_";			
			}
		}
		maxTurns = 0;
		playerOne = 0;
		playerTwo = 0;
		playerOneWins = true;
	}
			
	//instance methods
	public void printBoard() { //setter
		System.out.println(" 1 2 3");
		for (int i = 0; i < 3; i++) {
			System.out.print((i + 1) + " ");
			for (int j = 0; j < 3; j ++) {
				System.out.print(board[i][j] + " ");
			} 
			System.out.print("\r\n");
		}
		System.out.print("\r\n");
	}
	
	public boolean checking() { //accessor
		if (maxTurns > 8) {
			System.out.println("No more turns left. Try another round.");
		}
		
		
		if ((board[0][0].equals(board[0][1]) && board[0][0].equals(board[0][2])) //for horizontal win
				
				|| (board[0][0].equals(board[1][0]) && board[0][0].equals(board[2][0])) //for vertical win
				
						|| (board[0][0].equals(board[1][1]) && board[0][0].equals(board[2][2]))) { //for diagonal win
			
			
			switch (board[0][0]) {
			case "O":
				playerOne++;
				return playerOneWins;
			case "X":
				playerTwo++;
				playerOneWins = false;
				return playerOneWins;
			}
		}
		return playerOneWins;
		
		
	}
	public void playerOneMoves(int rowNum, int columnNum) { //mutator
		row = rowNum - 1;
		column = columnNum - 1;
		board[row][column] = "O";
		maxTurns++;
		printBoard();
	}

	public void playerTwoMoves(int rowNum, int columnNum) { //mutator
		row = rowNum - 1;
		column = columnNum - 1;
		board[row][column] = "X";
		maxTurns++;
		printBoard();
	}
	
	public void newGame() { //mutator
		for (int i = 0; i < 3; i++) {
			for (int j = 0; j < 3; j ++) {
				board[i][j] = "_";			
			}
		}
	}
	
	public String getWins() { //accessor
		String wins = "Player One: " + playerOne + 
						"\r\nPlayer Two: " + playerTwo;
		return wins;
	}
	
	
		
}

	
